apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-primary
spec:
  serviceName: postgres-primary
  replicas: 1
  selector:
    matchLabels:
      app: postgres
      role: primary
  template:
    metadata:
      labels:
        app: postgres
        role: primary
    spec:
      volumes:
        - name: init-script
          configMap:
            name: postgres-primary-init-script
            defaultMode: 0755
      containers:
        - name: postgres
          image: postgres:15
          args:
            - "-c"
            - "wal_level=replica"
            - "-c"
            - "hot_standby=on"
            - "-c"
            - "max_wal_senders=10"
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
            - name: REPLICA_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-replica-secret
                  key: POSTGRES_USER
            - name: REPLICA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-replica-secret
                  key: POSTGRES_PASSWORD
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
            - name: init-script
              mountPath: /docker-entrypoint-initdb.d/init.sh
              subPath: init.sh
  volumeClaimTemplates:
    - metadata:
        name: postgres-storage
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 2Gi